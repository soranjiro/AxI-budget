# name: Backend Tests

# on:
#   push:
#     branches: [ main, develop ]
#     paths:
#       - 'backend/**'
#       - '.github/workflows/test-backend.yml'
#   pull_request:
#     branches: [ main ]
#     paths:
#       - 'backend/**'
#       - '.github/workflows/test-backend.yml'
#   workflow_call:
#     outputs:
#       lambda-artifact-name:
#         description: "Name of the Lambda deployment artifact"
#         value: ${{ jobs.backend-test.outputs.artifact-name }}

# jobs:
#   backend-test:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: ./backend

#     outputs:
#       artifact-name: ${{ steps.upload.outputs.artifact-id }}

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Setup Rust
#       uses: actions-rs/toolchain@v1
#       with:
#         toolchain: stable
#         components: rustfmt, clippy

#     - name: Cache cargo registry
#       uses: actions/cache@v3
#       with:
#         path: ~/.cargo/registry
#         key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

#     - name: Cache cargo index
#       uses: actions/cache@v3
#       with:
#         path: ~/.cargo/git
#         key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}

#     - name: Cache cargo build
#       uses: actions/cache@v3
#       with:
#         path: backend/target
#         key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

#     - name: Format check
#       run: cargo fmt -- --check

#     - name: Clippy check
#       run: cargo clippy -- -D warnings

#     - name: Run tests
#       run: cargo test

#     - name: Build for Lambda
#       run: |
#         rustup target add x86_64-unknown-linux-musl
#         cargo build --release --target x86_64-unknown-linux-musl
#         cp target/x86_64-unknown-linux-musl/release/axi-budget-backend bootstrap
#         zip lambda-deployment.zip bootstrap

#     - name: Upload Lambda artifact
#       id: upload
#       uses: actions/upload-artifact@v4
#       with:
#         name: lambda-deployment-${{ github.sha }}
#         path: backend/lambda-deployment.zip
#         retention-days: 30

#     - name: Upload test results
#       uses: actions/upload-artifact@v4
#       if: always()
#       with:
#         name: backend-test-results-${{ github.sha }}
#         path: |
#           backend/target/coverage/
#           backend/test-results/
#         retention-days: 7
